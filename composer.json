{
  "name": "blueways/bw-static-template",
  "description": "TYPO3 extension that adds a new content element for rendering static fluid templates. Inject JSON and FAL data into the templates.",
  "license": "MIT",
  "type": "typo3-cms-extension",
  "keywords": [
    "TYPO3"
  ],
  "authors": [
    {
      "name": "Maik Schneider",
      "email": "schneider.maik@me.com",
      "role": "Developer"
    }
  ],
  "require": {
    "ext-json": "*",
    "ext-pdo": "*",
    "typo3/cms-core": "^12.3 || ^13.4"
  },
  "require-dev": {
    "armin/editorconfig-cli": "^2.0",
    "bk2k/bootstrap-package": "*",
    "ergebnis/composer-normalize": "^2.44",
    "friendsofphp/php-cs-fixer": "^3.12",
    "friendsoftypo3/content-blocks": "^0.7.18 || ^1.0.0",
    "helhum/typo3-console": "^8.1",
    "helmich/typo3-typoscript-lint": "^3.2",
    "nikic/php-parser": "4.19.4 as 5.3.1",
    "saschaegerer/phpstan-typo3": "^1.1",
    "ssch/typo3-rector": "^2.10",
    "symfony/translation": "^7.1",
    "typo3/cms-base-distribution": "^12.0 || ^13.4",
    "typo3/cms-lowlevel": "^12.0 || ^13.4"
  },
  "autoload": {
    "psr-4": {
      "Blueways\\BwStaticTemplate\\": "Classes/"
    }
  },
  "config": {
    "allow-plugins": {
      "ergebnis/composer-normalize": true,
      "typo3/class-alias-loader": true,
      "typo3/cms-composer-installers": true
    },
    "lock": false,
    "sort-packages": true
  },
  "extra": {
    "typo3/cms": {
      "cms-package-dir": "{$vendor-dir}/typo3/cms",
      "extension-key": "bw_static_template",
      "web-dir": "public"
    }
  },
  "scripts": {
    "ci:composer:normalize": "@composer normalize --no-check-lock --dry-run",
    "ci:editorconfig:lint": "ec --strict --git-only -n",
    "ci:php:fixer": "php-cs-fixer --config=php-cs-fixer.php fix --dry-run --format=checkstyle > php-cs-fixer.xml || true",
    "ci:php:lint": "find *.php . -name '*.php' ! -path './vendor/*'  ! -path './var/*' ! -path '*node_modules/*' -print0 | xargs -0 -n 1 -P 4 php -l",
    "ci:php:stan": "phpstan --no-progress --error-format=checkstyle > phpstan.xml || true",
    "ci:rector": "rector --no-interaction --dry-run",
    "ci:sca": [
      "@ci:composer:normalize",
      "@ci:editorconfig:lint",
      "@ci:php:lint",
      "@ci:php:fixer",
      "@ci:php:stan",
      "@ci:php:rector",
      "@ci:typoscript:lint",
      "@ci:xml:lint",
      "@ci:yaml:lint"
    ],
    "ci:typoscript:lint": "typoscript-lint --fail-on-warnings",
    "ci:xml:lint": "find ./ -name '*.xlf' ! -path './vendor/*' ! -path './var/*' | xargs -r xmllint --schema vendor/symfony/translation/Resources/schemas/xliff-core-1.2-transitional.xsd --noout",
    "ci:yaml:lint": "find ./ ! -path './vendor/*' ! -path '*/node_modules/*' \\( -name '*.yaml' -o -name '*.yml' \\) | xargs -r yaml-lint",
    "composer:normalize": "@composer normalize --no-check-lock",
    "editorconfig:lint": "ec --strict --fix --git-only -n",
    "php:fixer": "php-cs-fixer --config=php-cs-fixer.php fix",
    "php:lint": "find *.php . -name '*.php' ! -path './vendor/*'  ! -path './var/*' ! -path '*node_modules/*' -print0 | xargs -0 -n 1 -P 4 php -l",
    "php:stan": "phpstan --generate-baseline=phpstan-baseline.neon --allow-empty-baseline",
    "rector": "rector",
    "sca": [
      "@composer:normalize",
      "@editorconfig:lint",
      "@php:lint",
      "@php:fixer",
      "@php:stan",
      "@rector",
      "@typoscript:lint",
      "@xml:lint",
      "@yaml:lint"
    ],
    "typoscript:lint": "typoscript-lint",
    "xml:lint": "find ./ -name '*.xlf' ! -path './vendor/*' ! -path './var/*' | xargs -r xmllint --schema vendor/symfony/translation/Resources/schemas/xliff-core-1.2-transitional.xsd --noout",
    "yaml:lint": "find ./ ! -path './vendor/*' ! -path '*/node_modules/*' \\( -name '*.yaml' -o -name '*.yml' \\) | xargs -r yaml-lint"
  }
}
